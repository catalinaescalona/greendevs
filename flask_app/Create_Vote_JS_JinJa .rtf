{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww27440\viewh14060\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 \
This is a /vote_test route I created to test the JinJa output using a dictionary. I will work on the back end for the /vote route of our app.py.\
\
\
@app.route('/vote_test')\
def vote_test():\
        question = \{"Who?":["You", "Me"], "Where?": ["Here", "There", "Everywhere"], "When?": ["Before", "After", "During", "Later"]\}\
        return render_template("vote.html", questions=question)\
\
\
###################################################################################################################################################################################################\
\
This is the /create route I was using to test the Javascript functions. I will work on the backend with the SQL implementation. I am struggling to pass the dict variable (above moveQ() function) back to flask. If you can get the $.ajax figured out to do that, that would be incredible. Otherwise, I think I have a terrible way that we could make it work for the demo.\
\
@app.route('/create', methods=["GET", "POST"])\
def create_poll(name=None):\
\
    '''Renders an HTML template that allows users to create a poll'''\
    return render_template("create.html", name=name)\
\
\
\
###################################################################################################################################################################################################\
\
This is the Take a Poll HTML. I did not change the head of the document just the body underneath the \'93Poll Title.\'94. I will work on the back end for this. Let me know if you want the full HTML including the stuff I didn\'92t change.\
\
\
<body>\
\
    <header>\
        <img src="static/images/pollaris-logo.png" alt="Pollaris Logo">\
        <div class="sign-in">\
            <a href="#" class="btn">Sign In</a>\
        </div>\
    </header>\
\
    <h1>Poll Title</h1>\
    <form method="POST">\
        <div>\
        		\{% for question, answers in questions.items() %\}\
\
            <div class="question">\
                <h3>\{\{loop.index\}\}. \{\{question\}\}</h3>\
            </div>\
                <hr>\
            \{% for answer in answers  %\}\
                \{% set a_no=loop.counter1 %\}\
\
                <div class="voting-option">\
                <input type="radio" id=\{\{a_no\}\} name="option" value=\{\{a_no\}\}>\
                <label for=\{\{a_no\}\}>\{\{answer\}\}</label>\
                </div>\
            \{%endfor%\}\
                <hr>\
        \{%endfor%\}\
        <div>\
            <button class="btn btn-submit"  name="submit" value="submit">Submit</button>\
        </div>\
        </div>\
	</form>\
\
</body>\
</html>\
\
\
#####################################################################################################################################################################################################\
\
This is the create a poll javascript functions. The variable dict is the dictionary that I am not sure how to pass to the backend. If you can figure that out that would be incredible. I have a workaround that I am thinking we can do for the demo, but it is not ideal at all so if you have time the jsquery option would be best.\
\
<!DOCTYPE html>:\
<html>\
\
  <head>\
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>\
  </head>\
\
  <body>\
    <div id='questions'>\
      <input type="text" id="question" placeholder='New Question' />\
      <input type="button" id="tutorial" value="Add Option" onclick="addOption()" />\
      <hr />\
      <script>\
        function addOption() \{\
          var newq = document.createElement("input");\
          newq.type = "radio";\
          newq.name = 'bubble';\
          var newl = document.createElement("input");\
          newl.type = "text";\
          newl.name = "option"\
          newl.placeholder = "Option";\
\
          var linebreak = document.createElement("br");\
\
          div = document.getElementById("questions");\
          div.appendChild(newq);\
          div.appendChild(newl);\
          div.appendChild(linebreak)\
        \}\
\
      </script>\
    </div>\
    <div>\
      <input type="button" id="submit_q" value="Create Next Question" onclick=nextQ()>\
      <script>\
        var dict = \{\};\
\
        function nextQ() \{\
          var arr = [];\
          let question = document.getElementById("question");\
          let opts = document.getElementsByName('option');\
          let bubs = document.getElementsByName('bubble');\
          let brks = document.getElementsByTagName('br');\
          console.log(question.value)\
          for (var i = 0; i < opts.length; i++) \{\
\
            console.log(opts[i].value);\
            arr.push(opts[i].value.toString());\
\
          \}\
          dict[question.value] = arr\
          while (opts[0]) \{\
            opts[0].parentNode.removeChild(opts[0])\
            bubs[0].parentNode.removeChild(bubs[0])\
            brks[0].parentNode.removeChild(brks[0])\
          \}\
          question.value = ""\
          console.log(dict)\
        \}\
\
        function send_poll() \{\
          var arr = [];\
          let question = document.getElementById("question");\
          let opts = document.getElementsByName('option');\
          let bubs = document.getElementsByName('bubble');\
          let brks = document.getElementsByTagName('br');\
          console.log(question.value)\
          for (var i = 0; i < opts.length; i++) \{\
\
            console.log(opts[i].value);\
            arr.push(opts[i].value);\
\
          \}\
          dict[question.value] = arr\
          while (opts[0]) \{\
            opts[0].parentNode.removeChild(opts[0])\
            bubs[0].parentNode.removeChild(bubs[0])\
            brks[0].parentNode.removeChild(brks[0])\
          \}\
          question.value = ""\
          submit = document.getElementById("submit_poll");\
          submit.name = JSON.stringify(dict);\
          console.log(dict);\
          dict = \{\}\
        \}\
\
      </script>\
    </div>\
    <div>\
      <input type="button" id="submit_poll" value="Submit Poll" onclick="send_poll()">\
    </div>\
  </body>\
\
</html>\
\
\
\
}